// <auto-generated />
using System;
using DataAccess.Context.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(SimpleContextDb))]
    partial class SimpleContextDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entities.Concrete.EmailParameter", b =>
                {
                    b.Property<int>("EmailParameterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmailParameterId"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Html")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<bool>("SSL")
                        .HasColumnType("bit");

                    b.Property<string>("Smtp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmailParameterId");

                    b.ToTable("EmailParameters");
                });

            modelBuilder.Entity("Entities.Concrete.Kullanici", b =>
                {
                    b.Property<int>("KullaniciId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KullaniciId"), 1L, 1);

                    b.Property<int>("InsanId")
                        .HasColumnType("int");

                    b.HasKey("KullaniciId");

                    b.HasIndex("InsanId");

                    b.ToTable("Kullanicis");
                });

            modelBuilder.Entity("Entities.Concrete.MusteriSiparis", b =>
                {
                    b.Property<int>("SiparisId")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("MusteriSiparisId")
                        .HasColumnType("int");

                    b.HasKey("SiparisId");

                    b.HasIndex("KullaniciId");

                    b.ToTable("MusteriSiparises");
                });

            modelBuilder.Entity("Entities.Concrete.OperationClaim", b =>
                {
                    b.Property<int>("OperationClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OperationClaimId"), 1L, 1);

                    b.Property<string>("OperationClaimName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OperationClaimId");

                    b.ToTable("OperationClaims");
                });

            modelBuilder.Entity("Entities.Concrete.Personel", b =>
                {
                    b.Property<int>("PersonelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonelId"), 1L, 1);

                    b.Property<int>("DepartmanId")
                        .HasColumnType("int");

                    b.Property<int>("InsanId")
                        .HasColumnType("int");

                    b.HasKey("PersonelId");

                    b.HasIndex("InsanId");

                    b.ToTable("Personels");
                });

            modelBuilder.Entity("Entities.Concrete.SiparisKirtasiye", b =>
                {
                    b.Property<int>("SiparisKirtasiyeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiparisKirtasiyeId"), 1L, 1);

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SiparisTarih")
                        .HasColumnType("datetime2");

                    b.Property<float>("ToplamFiyat")
                        .HasColumnType("real");

                    b.HasKey("SiparisKirtasiyeId");

                    b.HasIndex("PersonelId");

                    b.ToTable("SiparisKirtasiyes");
                });

            modelBuilder.Entity("Entities.Concrete.SiparisKirtasiyeUrun", b =>
                {
                    b.Property<int>("SiparisKirtasiyeId")
                        .HasColumnType("int");

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<int>("SiparisKirtasiyeUrunId")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("SiparisKirtasiyeId");

                    b.HasIndex("UrunId");

                    b.ToTable("SiparisKirtasiyeUruns");
                });

            modelBuilder.Entity("Entities.Concrete.SiparisUrun", b =>
                {
                    b.Property<int>("SiparisUrunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiparisUrunId"), 1L, 1);

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<int>("SiparisId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SiparisTarih")
                        .HasColumnType("datetime2");

                    b.Property<float>("ToplamFiyat")
                        .HasColumnType("real");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("SiparisUrunId");

                    b.HasIndex("UrunId");

                    b.ToTable("SiparisUruns");
                });

            modelBuilder.Entity("Entities.Concrete.Urunler", b =>
                {
                    b.Property<int>("UrunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrunId"), 1L, 1);

                    b.Property<float>("BirimFiyat")
                        .HasColumnType("real");

                    b.Property<int>("Stok")
                        .HasColumnType("int");

                    b.Property<string>("UrunAd")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UrunId");

                    b.ToTable("Urunlers");
                });

            modelBuilder.Entity("Entities.Concrete.User", b =>
                {
                    b.Property<int>("InsanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InsanId"), 1L, 1);

                    b.Property<string>("ConfirmValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ForgotPasswordRequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ForgotPasswordValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsConfirm")
                        .HasColumnType("bit");

                    b.Property<bool>("IsForgotPasswordComplete")
                        .HasColumnType("bit");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("InsanId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Entities.Concrete.UserOperationClaim", b =>
                {
                    b.Property<int>("UserOperationClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserOperationClaimId"), 1L, 1);

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("OperationClaimId")
                        .HasColumnType("int");

                    b.HasKey("UserOperationClaimId");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("OperationClaimId");

                    b.ToTable("UserOperationClaims");
                });

            modelBuilder.Entity("Entities.Concrete.Kullanici", b =>
                {
                    b.HasOne("Entities.Concrete.User", "User")
                        .WithMany("Kullanicis")
                        .HasForeignKey("InsanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Concrete.MusteriSiparis", b =>
                {
                    b.HasOne("Entities.Concrete.Kullanici", "Kullanici")
                        .WithMany("MusteriSiparises")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.SiparisUrun", "SiparisUrun")
                        .WithOne("MusteriSiparis")
                        .HasForeignKey("Entities.Concrete.MusteriSiparis", "SiparisId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("SiparisUrun");
                });

            modelBuilder.Entity("Entities.Concrete.Personel", b =>
                {
                    b.HasOne("Entities.Concrete.User", "User")
                        .WithMany("Personels")
                        .HasForeignKey("InsanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Concrete.SiparisKirtasiye", b =>
                {
                    b.HasOne("Entities.Concrete.Personel", "Personel")
                        .WithMany("SiparisKirtasiyes")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("Entities.Concrete.SiparisKirtasiyeUrun", b =>
                {
                    b.HasOne("Entities.Concrete.SiparisKirtasiye", "SiparisKirtasiye")
                        .WithOne("SiparisKirtasiyeUrun")
                        .HasForeignKey("Entities.Concrete.SiparisKirtasiyeUrun", "SiparisKirtasiyeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Urunler", "Urun")
                        .WithMany("SiparisKirtasiyeUruns")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SiparisKirtasiye");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Entities.Concrete.SiparisUrun", b =>
                {
                    b.HasOne("Entities.Concrete.Urunler", "Urun")
                        .WithMany("SiparisUruns")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Entities.Concrete.UserOperationClaim", b =>
                {
                    b.HasOne("Entities.Concrete.Kullanici", "Kullanici")
                        .WithMany("UserOperationClaims")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.OperationClaim", "OperationClaim")
                        .WithMany("UserOperationClaims")
                        .HasForeignKey("OperationClaimId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("OperationClaim");
                });

            modelBuilder.Entity("Entities.Concrete.Kullanici", b =>
                {
                    b.Navigation("MusteriSiparises");

                    b.Navigation("UserOperationClaims");
                });

            modelBuilder.Entity("Entities.Concrete.OperationClaim", b =>
                {
                    b.Navigation("UserOperationClaims");
                });

            modelBuilder.Entity("Entities.Concrete.Personel", b =>
                {
                    b.Navigation("SiparisKirtasiyes");
                });

            modelBuilder.Entity("Entities.Concrete.SiparisKirtasiye", b =>
                {
                    b.Navigation("SiparisKirtasiyeUrun");
                });

            modelBuilder.Entity("Entities.Concrete.SiparisUrun", b =>
                {
                    b.Navigation("MusteriSiparis");
                });

            modelBuilder.Entity("Entities.Concrete.Urunler", b =>
                {
                    b.Navigation("SiparisKirtasiyeUruns");

                    b.Navigation("SiparisUruns");
                });

            modelBuilder.Entity("Entities.Concrete.User", b =>
                {
                    b.Navigation("Kullanicis");

                    b.Navigation("Personels");
                });
#pragma warning restore 612, 618
        }
    }
}
